/*
 * 두 번째 아이디어.
 * 맵 대신 배열을 사용했다. 확실히 자바에서 맵은 굉장히 느린 자료구조에 해당한다.
 * k개의 초밥을 확인해 유일한 초밥의 개수를 acc 변수에 담고, 쿠폰 초밥은 별도로 확인했다.
 */
import java.io.IOException;

public class Main {
	private static int[] seq;

	private static int readInt() throws IOException {
		int n = 0, cur;

		while (48 <= (cur = System.in.read()) && cur <= 57)
			n = (n << 3) + (n << 1) + (cur & 15);
		return n;
	}

	private static int solve(int n, int d, int k, int c) {
		int start = 0, end = k - 1, res = 0, acc;
		int[] counter = new int[d + 1];

		for (int i = 0; i < k; i++)
			if (counter[seq[i]]++ == 0)
				res++;
		acc = res;
		if (counter[c] == 0)
			res++;
		if (k == n)
			return res;
		start = 1;
		end = (end + 1) % n;
		while (start < n) {
			if (--counter[seq[start - 1]] == 0)
				acc--;
			if (counter[seq[end]]++ == 0)
				acc++;
			res = Math.max(res, acc + (counter[c] == 0 ? 1 : 0));
			start++;
			end = (end + 1) % n;
		}
		return res;
	}

	public static void main(String[] args) throws IOException {
		int n = readInt(), d = readInt(), k = readInt(), c = readInt();

		seq = new int[n];
		for (int i = 0; i < n; i++)
			seq[i] = readInt();
		System.out.println(solve(n, d, k, c));
	}
}